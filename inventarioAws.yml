---
- name: Instalar colecciones necesarias para interactuar con AWS
  hosts: local
  gather_facts: no
  tasks:
    - name: Instalar la colección amazon.aws utilizando pip
      ansible.builtin.pip:
        name: "amazon.aws"
        state: present
      become: yes  # Asegúrate de tener permisos de administrador si es necesario

    - name: Verificar que la colección amazon.aws esté instalada
      command: ansible-galaxy collection list amazon.aws
      register: result
      changed_when: false

    - name: Mostrar la instalación de amazon.aws
      debug:
        msg: "{{ result.stdout }}"

- name: Leer y procesar el archivo Grafana CSV, obtener instancias EC2 y agregar hosts
  hosts: local
  gather_facts: no
  vars:
    grafana_file: "{{ playbook_dir }}/inventory/grafana.csv"
    delimiter: ";"
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    aws_region: "us-east-1"  # Ajustar a tu región
    key_name: "ansible"      # Nombre de la key pair de AWS
  tasks:
    - name: Verificar que el archivo Grafana CSV existe
      stat:
        path: "{{ grafana_file }}"
      register: grafana_file_check

    - name: Fallar si el archivo de inventario Grafana no existe
      fail:
        msg: "El archivo de inventario {{ grafana_file }} no existe."
      when: not grafana_file_check.stat.exists

    - name: Leer contenido del archivo Grafana CSV
      set_fact:
        grafana_csv_content: "{{ lookup('file', grafana_file) }}"

    - name: Extraer encabezados del archivo Grafana CSV
      set_fact:
        grafana_headers: "{{ grafana_csv_content.split('\n') | first | split(delimiter) | map('trim') | list }}"

    - name: Extraer filas del archivo Grafana CSV
      set_fact:
        grafana_rows: "{{ grafana_csv_content.split('\n')[1:] | reject('match', '^$') | list | map('split', delimiter) | list }}"

    - name: Validar que cada fila del archivo Grafana tenga el mismo número de campos que los encabezados
      fail:
        msg: "La fila {{ row }} no tiene el mismo número de campos que los encabezados."
      when: row | length != grafana_headers | length
      loop: "{{ grafana_rows }}"
      loop_control:
        loop_var: row

    - name: Combinar encabezados con filas del archivo Grafana para crear diccionarios
      set_fact:
        grafana_csv_data: "{{ grafana_csv_data | default([]) + [ dict(grafana_headers | zip(row)) ] }}"
      loop: "{{ grafana_rows }}"
      loop_control:
        loop_var: row
        