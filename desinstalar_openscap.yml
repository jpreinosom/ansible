---
# playbooks/desinstalar_openscap.yml

- name: Leer y procesar el inventario CSV para desinstalar OpenSCAP
  hosts: localhost
  gather_facts: no
  vars:
    input_file: "{{ playbook_dir }}/inventory/inventario.csv"
    delimiter: ";"
  tasks:
    - name: Verificar que el archivo existe
      stat:
        path: "{{ input_file }}"
      register: file_check

    - name: Fallar si el archivo de inventario no existe
      fail:
        msg: "El archivo de inventario {{ input_file }} no existe."
      when: not file_check.stat.exists

    - name: Leer contenido del archivo CSV
      set_fact:
        csv_content: "{{ lookup('file', input_file) }}"

    - name: Extraer encabezados del CSV
      set_fact:
        headers: "{{ csv_content.split('\n') | first | split(delimiter) | map('trim') | list }}"

    - name: Extraer filas del CSV
      set_fact:
        rows: "{{ csv_content.split('\n')[1:] | reject('match', '^#|^$') | list | map('split', delimiter) | list }}"

    - name: Validar que cada fila tenga el mismo número de campos que los encabezados
      fail:
        msg: "La fila {{ row }} no tiene el mismo número de campos que los encabezados."
      when: row | length != headers | length
      loop: "{{ rows }}"
      loop_control:
        loop_var: row

    - name: Combinar encabezados con filas para crear diccionarios
      set_fact:
        csv_data: "{{ csv_data | default([]) + [ dict(headers | zip(row)) ] }}"
      loop: "{{ rows }}"
      loop_control:
        loop_var: row

    - name: Agregar hosts dinámicamente al grupo 'dynamic_hosts_openscap'
      add_host:
        name: "{{ item.IP }}"
        groups: dynamic_hosts_openscap
        ansible_host: "{{ item.IP }}"
        ansible_user: "{{ item.Usuario }}"
        ansible_password: "{{ item.Contraseña }}"
        ansible_connection: ssh
        ansible_ssh_pass: "{{ item.Contraseña }}"
      loop: "{{ csv_data }}"
      loop_control:
        loop_var: item

    - name: Mostrar estructura completa de csv_data
      debug:
        var: csv_data

- name: Desinstalar OpenSCAP en los hosts dinámicos
  hosts: dynamic_hosts_openscap
  gather_facts: yes
  become: yes  # Se asume que el usuario tiene privilegios sudo sin contraseña
  tasks:
    - name: Depurar la distribución del sistema
      debug:
        msg: "Distribución detectada: {{ ansible_distribution }} {{ ansible_distribution_version }}"

    - name: Definir paquetes necesarios para OpenSCAP
      set_fact:
        openscap_packages: "{{ distribuciones_paquetes[ansible_distribution] | default([]) }}"

    - name: Mostrar paquetes a desinstalar para USG
      debug:
        msg: "Paquetes a desinstalar para {{ ansible_distribution }}: {{ openscap_packages }}"

    - name: Desinstalar paquetes necesarios para OpenSCAP (Ubuntu)
      apt:
        name: "{{ openscap_packages }}"
        state: absent
      when: ansible_distribution == "Ubuntu" and openscap_packages | length > 0

    - name: Desinstalar paquetes necesarios para OpenSCAP (CentOS/RHEL)
      yum:
        name: "{{ openscap_packages }}"
        state: absent
      when: ansible_distribution in ["CentOS", "RedHat"] and openscap_packages | length > 0

    - name: Verificar desinstalación de OpenSCAP
      command: which oscap
      register: openscap_installed
      ignore_errors: yes

    - name: Asegurarse de que OpenSCAP está desinstalado
      fail:
        msg: "OpenSCAP no se pudo desinstalar en {{ ansible_distribution }} {{ ansible_distribution_version }}"
      when: openscap_installed.rc == 0

    - name: Mostrar mensaje de éxito
      debug:
        msg: "OpenSCAP se desinstaló correctamente en {{ ansible_distribution }} {{ ansible_distribution_version }}"
...
