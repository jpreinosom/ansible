---
- name: Leer y procesar el inventario CSV
  hosts: localhost
  gather_facts: no
  vars_files:
    - inventario.csv  # Archivo cifrado con Ansible Vault
  vars:
    input_file: "{{ playbook_dir }}/inventario.csv"
    delimiter: ","
  tasks:
    - name: Verificar que el archivo existe
      stat:
        path: "{{ input_file }}"
      register: file_check

    - name: Leer contenido del archivo CSV
      when: file_check.stat.exists
      set_fact:
        csv_content: "{{ lookup('file', input_file) }}"

    - name: Extraer encabezados del CSV
      when: file_check.stat.exists
      set_fact:
        headers: "{{ csv_content.split('\n') | first | split(delimiter) | map('trim') | list }}"

    - name: Extraer filas del CSV
      when: file_check.stat.exists
      set_fact:
        rows: "{{ csv_content.split('\n')[1:] | reject('match', '^$') | list | map('split', delimiter) | list }}"

    - name: Combinar encabezados con filas para crear diccionarios
      when: file_check.stat.exists
      set_fact:
        csv_data: "{{ csv_data | default([]) + [ dict(headers | zip(row)) ] }}"
      loop: "{{ rows }}"
      loop_control:
        loop_var: row

    - name: Agregar hosts dinámicamente al grupo 'dynamic_hosts'
      when: file_check.stat.exists
      add_host:
        name: "{{ item.IP }}"
        groups: dynamic_hosts
        ansible_host: "{{ item.IP }}"
        ansible_user: "{{ item.Usuario }}"
        ansible_password: "{{ item.Contraseña }}"
        ansible_connection: ssh
      loop: "{{ csv_data }}"
      loop_control:
        loop_var: item

- name: Obtener información de los servidores
  hosts: dynamic_hosts
  gather_facts: yes
  become: yes
  tasks:
    - name: Mostrar distribución y versión de Linux
      debug:
        msg: "Servidor {{ inventory_hostname }}: {{ ansible_facts['distribution'] }} {{ ansible_facts['distribution_version'] }}"

- name: Generar archivo resultado.csv y Transferirlo vía SCP
  hosts: localhost
  gather_facts: no
  vars_files:
    - inventario.csv  # Archivo cifrado con Ansible Vault
  tasks:
    - name: Asegurar que el directorio /home/ansible/resultado existe en el servidor destino
      file:
        path: /home/ansible/resultado
        state: directory
        mode: '0755'
      delegate_to: 192.168.100.51
      become: yes

    - name: Crear archivo resultado.csv
      copy:
        dest: /home/ansible/resultado/resultado.csv
        content: |
          IP,Usuario,Contraseña,Distribucion,Version
          {% for entry in hostvars['localhost']['csv_data'] %}
          {{ entry.IP }},{{ entry.Usuario }},{{ entry.Contraseña }},{{ hostvars[entry.IP]['ansible_facts']['distribution'] }},{{ hostvars[entry.IP]['ansible_facts']['distribution_version'] }}
          {% endfor %}
    
    - name: Transferir resultado.csv al servidor destino vía SCP
      copy:
        src: /home/ansible/resultado/resultado.csv
        dest: /home/ansible/resultado/resultado.csv
      delegate_to: 192.168.100.51
      become: yes
