---
# playbooks/instalar_herramientas_seguridad.yml

- name: Leer y procesar el inventario CSV para instalar herramientas de seguridad
  hosts: localhost
  gather_facts: no
  vars:
    input_file: "{{ playbook_dir }}/inventory/inventario.csv"
    delimiter: ";"
  tasks:
    - name: Verificar que el archivo existe
      stat:
        path: "{{ input_file }}"
      register: file_check

    - name: Fallar si el archivo de inventario no existe
      fail:
        msg: "El archivo de inventario {{ input_file }} no existe."
      when: not file_check.stat.exists

    - name: Leer contenido del archivo CSV
      set_fact:
        csv_content: "{{ lookup('file', input_file) }}"

    - name: Extraer encabezados del CSV
      set_fact:
        headers: "{{ csv_content.split('\n') | first | split(delimiter) | map('trim') | list }}"

    - name: Extraer filas del CSV
      set_fact:
        rows: "{{ csv_content.split('\n')[1:] | reject('match', '^#|^$') | list | map('split', delimiter) | list }}"

    - name: Validar que cada fila tenga el mismo número de campos que los encabezados
      fail:
        msg: "La fila {{ row }} no tiene el mismo número de campos que los encabezados."
      when: row | length != headers | length
      loop: "{{ rows }}"
      loop_control:
        loop_var: row

    - name: Combinar encabezados con filas para crear diccionarios
      set_fact:
        csv_data: "{{ csv_data | default([]) + [ dict(headers | zip(row)) ] }}"
      loop: "{{ rows }}"
      loop_control:
        loop_var: row

    - name: Agregar hosts dinámicamente al grupo 'dynamic_hosts_seguridad'
      add_host:
        name: "{{ item.IP }}"
        groups: dynamic_hosts_seguridad
        ansible_host: "{{ item.IP }}"
        ansible_user: "{{ item.Usuario }}"
        ansible_become: yes
        ansible_password: "{{ item.Contraseña }}"
        ansible_connection: ssh
        ansible_ssh_pass: "{{ item.Contraseña }}"
      loop: "{{ csv_data }}"
      loop_control:
        loop_var: item

    - name: Mostrar estructura completa de csv_data
      debug:
        var: csv_data

- name: Instalar herramientas de seguridad en los hosts dinámicos
  hosts: dynamic_hosts_seguridad
  gather_facts: yes
  become: yes  # Se asume que el usuario tiene privilegios sudo sin contraseña
  vars:
    distribuciones_paquetes:
      Ubuntu:
        - usg
      Debian:
        - usg
      CentOS:
        - openscap-scanner
        - scap-security-guide
      RedHat:
        - openscap-scanner
        - scap-security-guide
      Fedora:
        - openscap
        - scap-security-guide
      SUSE:
        - suse-manager-client
    # Variables específicas para SUSE Manager
    suse_manager_repo_url: "https://download.opensuse.org/repositories/systemsmanagement:SUSE_Manager/standard/"
    suse_manager_repo_gpg: "https://download.opensuse.org/repositories/systemsmanagement:SUSE_Manager/standard/repodata/repomd.xml.key"
  tasks:
    - name: Depurar la distribución del sistema
      debug:
        msg: "Distribución detectada: {{ ansible_distribution }} {{ ansible_distribution_version }}"

    # Definir paquetes a instalar según la distribución
    - name: Definir paquetes necesarios para la distribución
      set_fact:
        paquetes_a_instalar: "{{ distribuciones_paquetes[ansible_distribution] | default([]) }}"

    - name: Mostrar paquetes a instalar para {{ ansible_distribution }}
      debug:
        msg: "Paquetes a instalar para {{ ansible_distribution }}: {{ paquetes_a_instalar }}"

    # Instalación de OpenSCAP para CentOS/RHEL/Fedora
    - name: Instalar paquetes necesarios para CentOS/RHEL/Fedora
      when: ansible_distribution in ["CentOS", "RedHat", "Fedora"]
      package:
        name: "{{ paquetes_a_instalar }}"
        state: present

    # Instalación de USG para Ubuntu/Debian
    - name: Instalar USG en Ubuntu/Debian
      when: ansible_distribution in ["Ubuntu", "Debian"]
      block:
        - name: Instalar Ubuntu Advantage Tools
          apt:
            name: ubuntu-advantage-tools
            state: present
          become: yes

        - name: Hacer que el usuario sea sudoer
          command: "usermod -aG sudo {{ ansible_user }}"
          become: yes

        - name: Habilitar Ubuntu Advantage USG
          command: "/usr/bin/ua enable usg"
          become: yes
          register: ua_enable_result
          retries: 3
          delay: 10
          until: ua_enable_result.rc == 0
          ignore_errors: yes

        - name: Verificar habilitación de USG
          fail:
            msg: "No se pudo habilitar USG en {{ ansible_distribution }} {{ ansible_distribution_version }}."
          when: ua_enable_result.rc != 0

        - name: Actualizar la lista de paquetes
          apt:
            update_cache: yes
            cache_valid_time: 3600  # 1 hora
          become: yes

        - name: Instalar USG
          apt:
            name: usg
            state: present
          become: yes

    # Instalación de SUSE Manager para SUSE
    - name: Instalar SUSE Manager Client en SUSE
      when: ansible_distribution == "SUSE Linux Enterprise Server"
      block:
        - name: Verificar si el repositorio de SUSE Manager ya está agregado
          command: "zypper repos --details | grep 'SUSE_Manager'"
          register: repo_exists
          ignore_errors: yes

        - name: Agregar repositorio de SUSE Manager si no existe
          when: repo_exists.rc != 0
          block:
            - name: Agregar repositorio de SUSE Manager
              command: "zypper addrepo {{ suse_manager_repo_url }} SUSE_Manager"
              args:
                creates: "/etc/zypp/repos.d/SUSE_Manager.repo"

            - name: Importar clave GPG del repositorio de SUSE Manager
              command: "rpm --import {{ suse_manager_repo_gpg }}"
              args:
                creates: "/etc/pki/rpm-gpg/RPM-GPG-KEY-SUSE_Manager"

            - name: Actualizar la lista de repositorios
              command: "zypper refresh"
              register: zypper_refresh
              changed_when: "'Refreshing ' in zypper_refresh.stdout"

        - name: Instalar paquetes SUSE Manager
          command: "zypper install -y {{ paquetes_a_instalar | join(' ') }}"
          args:
            creates: "/usr/bin/rhnreg_ks"  # Asumiendo que este binario se crea al instalar suse-manager-client

    # Verificar instalación de la herramienta de seguridad
    - name: Verificar instalación de la herramienta de seguridad
      block:
        - name: Verificar instalación de OpenSCAP
          command: which oscap
          register: openscap_installed
          ignore_errors: yes
          when: ansible_distribution in ["CentOS", "RedHat", "Fedora"]

        - name: Verificar instalación de USG
          command: which usg
          register: usg_installed
          ignore_errors: yes
          when: ansible_distribution in ["Ubuntu", "Debian"]

        - name: Verificar instalación de SUSE Manager Client
          command: which rhnreg_ks
          register: suse_manager_installed
          ignore_errors: yes
          when: ansible_distribution == "SUSE Linux Enterprise Server"

        - name: Establecer el estado de instalación de OpenSCAP
          set_fact:
            herramienta_instalada: "{{ openscap_installed.rc == 0 }}"
          when: openscap_installed.rc is defined

        - name: Establecer el estado de instalación de USG
          set_fact:
            herramienta_instalada: "{{ usg_installed.rc == 0 }}"
          when: usg_installed.rc is defined

        - name: Establecer el estado de instalación de SUSE Manager
          set_fact:
            herramienta_instalada: "{{ suse_manager_installed.rc == 0 }}"
          when: suse_manager_installed.rc is defined

        - name: Asegurarse de que la herramienta de seguridad está instalada
          fail:
            msg: "La herramienta de seguridad no se pudo instalar en {{ ansible_distribution }} {{ ansible_distribution_version }}"
          when: not herramienta_instalada

        - name: Mostrar mensaje de éxito
          debug:
            msg: "La herramienta de seguridad se instaló correctamente en {{ ansible_distribution }} {{ ansible_distribution_version }}"
