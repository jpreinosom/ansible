- name: Consultar la tabla inventario y obtener recursos de las máquinas
  hosts: grafana_hosts
  gather_facts: no
  vars:
    db_name: "grafana_db"
  tasks:
    - name: Realizar consulta SQL a la tabla inventario
      command: >
        psql -U grafana_user -d grafana_db -c "SELECT ip, distribucion, version, familia, usuario, password FROM inventario"
      register: inventario_query_result
      environment:
         PGPASSWORD: "grafana_password"
      become: no

    - name: Parsear el resultado de la consulta y extraer las IPs
      set_fact:
        inventario_data: "{{ inventario_query_result.stdout.split('\n')[2:-2] | map('split', '|') | map('map', 'trim') | list }}"
      
    - name: Agregar hosts dinámicamente al grupo 'grafana_hosts'
      add_host:
        name: "{{ item[0] }}"  # Usamos la IP como nombre del host
        groups: grafana_hosts
        ansible_host: "{{ item[0] }}"
        ansible_user: "{{ item[4] }}"  # Usuario desde la columna 'usuario'
        ansible_password: "{{ item[5] }}"  # Contraseña desde la columna 'password'
        ansible_connection: ssh
        ansible_ssh_pass: "{{ item[5] }}"
      loop: "{{ inventario_data }}"

    - name: Obtener información de recursos (disco, RAM, CPU) desde los hosts
      block:
        - name: Obtener disco total en Linux
          command: "df -h --total | grep total | awk '{print $2}'"
          when: "'Linux' in item[3]"  # Verifica si es un sistema Linux
          register: disk_linux
          
        - name: Obtener RAM total en Linux
          command: "free -h | grep Mem | awk '{print $2}'"
          when: "'Linux' in item[3]"  # Verifica si es un sistema Linux
          register: ram_linux

        - name: Obtener procesadores en Linux
          command: "lscpu | grep 'Model name' | awk -F: '{print $2}'"
          when: "'Linux' in item[3]"  # Verifica si es un sistema Linux
          register: cpu_linux

        - name: Obtener disco total en Windows
          win_command: "Get-PSDrive C | Select-Object @{Name='Total';Expression={($_.Used + $_.Free)}}"
          when: "'Windows' in item[3]"  # Verifica si es un sistema Windows
          register: disk_windows

        - name: Obtener RAM total en Windows
          win_command: "Get-WmiObject Win32_ComputerSystem | Select-Object TotalPhysicalMemory"
          when: "'Windows' in item[3]"  # Verifica si es un sistema Windows
          register: ram_windows

        - name: Obtener procesadores en Windows
          win_command: "Get-WmiObject Win32_Processor | Select-Object -First 1 -Property Name"
          when: "'Windows' in item[3]"  # Verifica si es un sistema Windows
          register: cpu_windows

    - name: Mostrar información de recursos para cada host
      debug:
        msg: >
          Host: {{ item[0] }} | 
          Disco: {{ disk_linux.stdout if 'Linux' in item[3] else disk_windows.stdout }} | 
          RAM: {{ ram_linux.stdout if 'Linux' in item[3] else ram_windows.stdout }} | 
          CPU: {{ cpu_linux.stdout if 'Linux' in item[3] else cpu_windows.stdout }}
      loop: "{{ inventario_data }}"
