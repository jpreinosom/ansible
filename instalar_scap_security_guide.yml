---
# playbooks/instalar_scap_security_guide.yml

- name: Leer y procesar el inventario CSV para instalar scap-security-guide
  hosts: localhost
  gather_facts: no
  vars:
    input_file: "{{ playbook_dir }}/inventory/inventario.csv"
    delimiter: ";"
  tasks:
    - name: Verificar que el archivo existe
      stat:
        path: "{{ input_file }}"
      register: file_check

    - name: Fallar si el archivo de inventario no existe
      fail:
        msg: "El archivo de inventario {{ input_file }} no existe."
      when: not file_check.stat.exists

    - name: Leer contenido del archivo CSV
      set_fact:
        csv_content: "{{ lookup('file', input_file) }}"

    - name: Extraer encabezados del CSV
      set_fact:
        headers: "{{ csv_content.split('\n') | first | split(delimiter) | map('trim') | list }}"

    - name: Extraer filas del CSV
      set_fact:
        rows: "{{ csv_content.split('\n')[1:] | reject('match', '^#|^$') | list | map('split', delimiter) | list }}"

    - name: Validar que cada fila tenga el mismo número de campos que los encabezados
      fail:
        msg: "La fila {{ row }} no tiene el mismo número de campos que los encabezados."
      when: row | length != headers | length
      loop: "{{ rows }}"
      loop_control:
        loop_var: row

    - name: Combinar encabezados con filas para crear diccionarios
      set_fact:
        csv_data: "{{ csv_data | default([]) + [ dict(headers | zip(row)) ] }}"
      loop: "{{ rows }}"
      loop_control:
        loop_var: row

    - name: Agregar hosts dinámicamente al grupo 'dynamic_hosts_scap'
      add_host:
        name: "{{ item.IP }}"
        groups: dynamic_hosts_scap
        ansible_host: "{{ item.IP }}"
        ansible_user: "{{ item.Usuario }}"
        ansible_password: "{{ item.Contraseña }}"
        ansible_connection: ssh
        ansible_ssh_pass: "{{ item.Contraseña }}"
      loop: "{{ csv_data }}"
      loop_control:
        loop_var: item

    - name: Mostrar estructura completa de csv_data
      debug:
        var: csv_data

- name: Instalar scap-security-guide en los hosts dinámicos
  hosts: dynamic_hosts_scap
  gather_facts: yes
  become: yes  # Se asume que el usuario tiene privilegios sudo sin contraseña
  tasks:
    - name: Asegurarse de que EPEL esté habilitado en RHEL/CentOS
      yum:
        name: epel-release
        state: present
      when: ansible_distribution in ["CentOS", "RedHat"]

    - name: Instalar scap-security-guide
      package:
        name: scap-security-guide
        state: present

    - name: Confirmar la instalación de scap-security-guide
      command: which scap
      register: scap_installed
      ignore_errors: yes

    - name: Asegurarse de que scap-security-guide está instalado
      fail:
        msg: "scap-security-guide no se pudo instalar en {{ inventory_hostname }}"
      when: scap_installed.rc != 0

    - name: Mostrar mensaje de éxito
      debug:
        msg: "scap-security-guide se instaló correctamente en {{ inventory_hostname }}"
